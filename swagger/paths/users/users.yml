/api/v1/users/exists:
    get:
        tags:
            - Users
        summary: "사용자 아이디 중복 확인"
        description: 사용자 아이디 중복 확인<br>
            중복 시 400 에러, 중복되지 않으면 200 응답
        parameters:
            - in: query
              name: loginId
              required: true
              schema:
                  type: string
              description: 사용자 로그인 아이디 (필수)
        responses:
            200:
                description: 성공
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "User exists"
            400:
                description: 중복된 아이디
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "User already exists"
                                code:
                                    type: string
                                    example: "E001"
/api/v1/users/signup:
    post:
        tags:
            - Users
        summary: "새로운 사용자 생성"
        description: 새로운 사용자 생성
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            loginId:
                                type: string
                            loginPw:
                                type: string
                            name:
                                type: string
                            email:
                                type: string
                            phone:
                                type: string
                            birth:
                                type: string
                        required:
                            - loginId
                            - loginPw
                            - name
                            - email
        responses:
            201:
                description: 사용자 생성 성공
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "User created successfully"
            400:
                description: 잘못된 요청
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Invalid request"
                                code:
                                    type: string
                                    example: "E002"
/api/v1/users/signin:
    post:
        tags:
            - Users
        summary: "사용자 로그인"
        description: 사용자 로그인
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            loginId:
                                type: string
                                description: 사용자 로그인 아이디
                            loginPw:
                                type: string
                                description: 사용자 로그인 비밀번호
                        required:
                            - loginId
                            - loginPw
        responses:
            200:
                description: 로그인 성공
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                accessToken:
                                    type: string
                                    example: jwt_token
                                refreshToken:
                                    type: string
                                    example: jwt_token
            400:
                description: 로그인 실패
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: request validation failed | user not found | password is incorrect
                                code:
                                    type: string
                                    example: E000 | E002 | E003
/api/v1/users/profiles:
    get:
        tags:
            - Users
        summary: "사용자 프로필 정보 조회"
        description: 사용자 프로필 정보 조회
        parameters:
            - in: header
              name: Authorization
              required: true
              schema:
                  type: string
              description: Bearer jwt_token
        responses:
            200:
                description: 사용자 프로필 조회 성공
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "success"
                                    description:: 요청 성공 메시지
                                tier:
                                    type: string
                                    example: "기본"
                                    description: 사용자 등급
                                name:
                                    type: string
                                    example: "이름"
                                    description: 사용자 이름
                                email:
                                    type: string
                                    example: "이메일"
                                    description: 사용자 이메일
                                loginId:
                                    type: string
                                    example: "아이디"
                                    description: 사용자 아이디
                                phone:
                                    type: string
                                    example: "전화번호"
                                    description: 사용자 전화번호
                                birth:
                                    type: string
                                    example: "생년월일"
                                    description: 사용자 생년월일
                                points:
                                    type: integer
                                    example: 100
                                    description: 사용자 적립금
                                couponCnt:
                                    type: integer
                                    example: 3
                                    description: 사용자 보유 쿠폰 수
            401:
                description: 인증 실패
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Unauthorized"
                                code:
                                    type: string
                                    example: "E009"
    patch:
        tags:
            - Users
        summary: "사용자 프로필 정보 수정"
        description: 사용자 프로필 정보 수정<br>수정 할 정보만 body에 넣어서 요청
        parameters:
            - in: header
              name: Authorization
              required: true
              schema:
                  type: string
              description: Bearer jwt_token
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            name:
                                type: string
                                description: 사용자 이름
                            email:
                                type: string
                                description: 사용자 이메일
                            phone:
                                type: string
                                description: 사용자 전화번호
                            birth:
                                type: string
                                description: 사용자 생년월일
                            loginPw:
                                type: string
                                description: 사용자 로그인 비밀번호
        responses:
            200:
                description: 사용자 프로필 수정 성공
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "update success"
                                updatedColumns:
                                    type: array
                                    items:
                                        type: string
                                    example:
                                        [
                                            "name",
                                            "email",
                                            "phone",
                                            "birth",
                                            "loginPw",
                                        ]
            401:
                description: 인증 실패
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Unauthorized"
                                code:
                                    type: string
                                    example: "E009"
/api/v1/users/passwords:
    post:
        tags:
            - Users
        summary: "사용자 비밀번호 올바른지 확인"
        description: 사용자 비밀번호 올바른지 확인<br>jwt 토큰 필수, body 필수<br>올바를 시 200, 틀리면 400
        parameters:
            - in: header
              name: Authorization
              required: true
              schema:
                  type: string
              description: Bearer jwt_token
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            loginPw:
                                type: string
                                description: 사용자 로그인 비밀번호
                        required:
                            - loginPw
        responses:
            200:
                description: 비밀번호가 올바름
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Password is correct"
            400:
                description: 비밀번호가 올바르지 않음
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Password is incorrect"
                                code:
                                    type: string
                                    example: "E003"
            401:
                description: 인증 실패
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Unauthorized"
                                code:
                                    type: string
                                    example: "E009"
/api/v1/users/addresses:
    get:
        tags:
            - Users
        summary: "사용자 주소 목록 조회"
        description: "사용자 주소 목록 조회<br>기본 주소가 가장 먼저 나옴"
        parameters:
            - in: header
              name: Authorization
              required: true
              schema:
                  type: string
              description: "Bearer jwt_token"
        responses:
            200:
                description: "주소 목록 조회 성공"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "success"
                                addresses:
                                    type: array
                                    items:
                                        type: object
                                        properties:
                                            addressId:
                                                type: string
                                                example: "6416f..."
                                                description: 주소 ID
                                            address:
                                                type: string
                                                example: "서울특별시..."
                                                description: 주소
                                            extraAddr:
                                                type: string
                                                example: "101동 1001호"
                                                description: 추가 주소
                                            defaultAddr:
                                                type: boolean
                                                example: true
                                                description: 기본 주소 여부
            401:
                description: "인증 실패"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Unauthorized"
                                code:
                                    type: string
                                    example: "E009"
    post:
        tags:
            - Users
        summary: "사용자 주소 추가"
        description: "사용자 주소 추가<br>isDefault가 true면 기존 기본 주소는 해제"
        parameters:
            - in: header
              name: Authorization
              required: true
              schema:
                  type: string
              description: "Bearer jwt_token"
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            address:
                                type: string
                            extraAddr:
                                type: string
                            isDefault:
                                type: boolean
                        required:
                            - address
                            - extraAddr
                            - isDefault
        responses:
            200:
                description: "새 주소 추가 성공"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "new address added success"
            401:
                description: "인증 실패"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Unauthorized"
                                code:
                                    type: string
                                    example: "E009"
/api/v1/users/addresses/:addressId/defaults:
    patch:
        tags:
            - Users
        summary: "사용자 주소 기본 주소 설정"
        description: "사용자 주소 기본 주소 설정<br>기존 기본 주소를 해제하고, 해당 주소를 기본 주소로 설정, 다른 기본 주소는 해제됨"
        parameters:
            - in: header
              name: Authorization
              required: true
              schema:
                  type: string
              description: "Bearer jwt_token"
            - in: path
              name: addressId
              required: true
              schema:
                  type: string
              description: 주소 ID
        responses:
            200:
                description: "주소 기본 설정 성공"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "update success"
            401:
                description: "인증 실패"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Unauthorized"
                                code:
                                    type: string
                                    example: "E009"
            404:
                description: "주소를 찾을 수 없음"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "address ${addressId} not found"
                                code:
                                    type: string
                                    example: "E006"
/api/v1/users/addresses/:addressId:
    delete:
        tags:
            - Users
        summary: "사용자 주소 삭제"
        description: "사용자의 주소를 삭제합니다.<br>기본 주소는 삭제할 수 없습니다."
        parameters:
            - in: header
              name: Authorization
              required: true
              schema:
                  type: string
              description: "Bearer jwt_token"
            - in: path
              name: addressId
              required: true
              schema:
                  type: string
              description: "삭제할 주소 ID"
        responses:
            200:
                description: "주소 삭제 성공"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "delete success"
                                addresses:
                                    type: array
                                    items:
                                        type: object
                                        description: "남은 주소 목록"
            400:
                description: "기본 주소 삭제 시도"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "default address cannot be deleted"
                                code:
                                    type: string
                                    example: "E007"
            401:
                description: "인증 실패"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Unauthorized"
                                code:
                                    type: string
                                    example: "E009"
            404:
                description: "주소를 찾을 수 없음"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "address ${addressId} not found"
                                code:
                                    type: string
                                    example: "E006"
    patch:
        tags:
            - Users
        summary: "사용자 주소 수정"
        description: "사용자의 주소를 수정합니다.<br>수정하고자 하는 필드만 전송.<br> 기본 주소 지정 해제 시 요청 실패 -> 다른 주소를 기본 주소로 설정해야 함"
        parameters:
            - in: header
              name: Authorization
              required: true
              schema:
                  type: string
              description: "Bearer jwt_token"
            - in: path
              name: addressId
              required: true
              schema:
                  type: string
              description: "수정할 주소 ID"
        requestBody:
            required: false
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            address:
                                type: string
                                description: "주소"
                            extraAddr:
                                type: string
                                description: "상세 주소"
                            isDefault:
                                type: boolean
                                description: "기본 주소 여부"
        responses:
            200:
                description: "주소 수정 성공"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "update success"
                                address:
                                    type: object
                                    properties:
                                        _id:
                                            type: string
                                            example: "6416f..."
                                        address:
                                            type: string
                                            example: "서울특별시..."
                                        extraAddress:
                                            type: string
                                            example: "101동 1001호"
                                        defaultAddr:
                                            type: boolean
                                            example: true
            400:
                description: "요청 실패"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "default address must exist"
                                code:
                                    type: string
                                    example: "E008"
            401:
                description: "인증 실패"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Unauthorized"
                                code:
                                    type: string
                                    example: "E009"
            404:
                description: "주소를 찾을 수 없음"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "address ${addressId} not found"
                                code:
                                    type: string
                                    example: "E006"
/api/v1/users/orders:
    get:
        tags:
            - Users
        summary: "사용자 주문 목록 조회"
        description: "사용자의 주문 목록을 조회합니다. 페이지네이션을 지원합니다.<br>주문 목록은 최신순으로 정렬됩니다."
        parameters:
            - in: header
              name: Authorization
              required: true
              schema:
                  type: string
              description: "Bearer jwt_token"
            - in: query
              name: page
              required: false
              schema:
                  type: integer
                  default: 1
              description: "페이지 번호"
            - in: query
              name: limit
              required: false
              schema:
                  type: integer
                  default: 10
              description: "한 페이지당 아이템 수"
        responses:
            200:
                description: "주문 목록 조회 성공"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "success"
                                orders:
                                    type: array
                                    items:
                                        type: object
                                        properties:
                                            orderId:
                                                type: string
                                                description: "주문서 고유 번호"
                                                example: "67b1a4da3eaf118cfe31bded"
                                            orderDate:
                                                type: string
                                                description: "주문 일자"
                                                example: "2025-02-17T06:47:38.378Z"
                                            firstProductName:
                                                type: string
                                                description: "첫 번째 상품 이름"
                                                example: "애플 에어팟 프로 2세대"
                                            firstProductMainImgUrl:
                                                type: string
                                                description: "첫 번째 상품 대표 이미지 URL"
                                                example: "https://example.com/airpods-pro.jpg"
                                            totalProductCnt:
                                                type: integer
                                                description: "총 상품 개수"
                                                example: 2
                                            paymentMethod:
                                                type: string
                                                description: "결제 수단"
                                                example: "card"
                                            totalPrice:
                                                type: number
                                                description: "총 결제 금액"
                                                example: 300000
                                            totalDeliveryStatus:
                                                type: string
                                                description: "전체 배송 상태 (ready, shipping, delivered)"
                                                example: "ready"
                                totalItems:
                                    type: integer
                                    description: "전체 주문 개수"
                                    example: 1
                                totalPages:
                                    type: integer
                                    description: "전체 페이지 수"
                                    example: 1
                                currPage:
                                    type: integer
                                    description: "현재 페이지"
                                    example: 1
                                currItem:
                                    type: integer
                                    description: "현재 페이지의 아이템 수"
                                    example: 1
            401:
                description: "인증 실패"
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Unauthorized"
                                code:
                                    type: string
                                    example: "E009"
